library(protobi)
help(protobi)
install.packages("roxygen2")
install.packages("roxygen2")
install.packages("roxygen2")
# protobi-r
R library to import/export data between R and Protobi
## Install the package
You can install the protobi library directly from GitHub using `devtools`.
In the R command prompt issue the following command:
```R
# load dependencies
install.packages("HMisc", repos="http://cran.r-project.org")
install.packages("jsonlite", repos="http://cran.r-project.org")
install.packages("/Users/pieter/Exp/protobi-r/protobi_0.1.0.tgz", repos = NULL, type = .Platform$pkgType)
help(protobi)
library(protobi)
help(protobi)
install.packages("/Users/pieter/Exp/protobi-r/protobi_0.1.0.tgz", repos = NULL, type = .Platform$pkgType)
library(protobi)
help(protobi)
install.packages("/Users/pieter/Exp/protobi-r/protobi_0.1.0.tgz", repos = NULL, type = .Platform$pkgType)
library(protobi)
help(protobi)
help(protobi)
library(protobi)
help(protobi)
install.packages("/Users/pieter/Exp/protobi-r/protobi_0.1.0.tgz", repos = NULL, type = .Platform$pkgType)
library(protobi)
help(protobi)
install.packages("/Users/pieter/Exp/protobi-r/protobi_0.1.0.tgz", repos = NULL, type = .Platform$pkgType)
library(protobi)
help(protobi)
install.packages("/Users/pieter/Exp/protobi-r/protobi_0.1.0.tgz", repos = NULL, type = .Platform$pkgType)
library(protobi)
help(protobi)
help(hello)
help()
help(protobi)
help(hello)
help(hello)
help(protobi)
install.packages("/Users/pieter/Exp/protobi-r/protobi_0.1.0.tgz", repos = NULL, type = .Platform$pkgType)
library(protobi)
help(protobi)
help(protobi)
library(protobi)
install.packages("/Users/pieter/Exp/protobi-r/protobi_0.1.0.tgz", repos = NULL, type = .Platform$pkgType)
library(protobi)
help(protobi)
